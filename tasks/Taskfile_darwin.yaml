version: '3'

tasks:
  brewinstall:
    desc: Install packages
    label: '{{.TASK}}{{if .NAME}} - {{.NAME}}{{end}}'
    vars:
      BREW_FLAGS: '{{default "--formula" .BREW_FLAGS}}'
      INSTALLED:
        sh: brew list {{.BREW_FLAGS}} '{{.NAME}}' || echo ''
      OUTDATED:
        sh: brew outdated {{.BREW_FLAGS}} '{{.NAME}}' || echo ''
    cmds:
      - brew install {{.BREW_FLAGS}} '{{.NAME}}'
    status:
      - test -n '{{.INSTALLED}}'
      - test ! -n '{{.OUTDATED}}'

  normalize:
    desc: Use GNU commands
    cmds:
      - task: brewinstall
        vars: { NAME: coreutils }
      - task: brewinstall
        vars: { NAME: diffutils }
      - task: brewinstall
        vars: { NAME: ed }
      - task: brewinstall
        vars: { NAME: findutils }
      - task: brewinstall
        vars: { NAME: gawk }
      - task: brewinstall
        vars: { NAME: gnu-sed }
      - task: brewinstall
        vars: { NAME: gnu-tar }
      - task: brewinstall
        vars: { NAME: grep }
      - task: brewinstall
        vars: { NAME: gzip }

  tools:
    desc: Install tools for development
    cmds:
      - task: brewinstall
        vars: { NAME: go }
      - task: brewinstall
        vars: { NAME: neovim }
      - task: brewinstall
        vars: { NAME: git }
      - task: brewinstall
        vars: { NAME: ripgrep }
      - task: brewinstall
        vars: { NAME: direnv }

  docker:
    cmds:
      - task: brewinstall
        vars: { NAME: docker, BREW_FLAGS: '--cask' }
      - |
        if [[ ! -d ~/.docker ]]; then
          open -a Docker
        fi

  google-cloud-sdk:
    cmds:
      - task: brewinstall
        vars: { NAME: google-cloud-sdk, BREW_FLAGS: '--cask' }

  vscode:
    cmds:
      - task: brewinstall
        vars: { NAME: visual-studio-code, BREW_FLAGS: '--cask' }
      - code --install-extension harg.iceberg
      - code --install-extension asvetliakov.vscode-neovim
      - code --install-extension EditorConfig.EditorConfig
      - code --install-extension Rubymaniac.vscode-direnv
      - code --install-extension ms-vscode-remote.remote-containers

  dotfiles:
    cmds:
      - |
        mkdir -p ~/local/devenv/
        cp -rfP ../dotfiles ~/
        ln -sf ~/dotfiles/apply.sh ~/local/devenv/apply.sh
        ln -sf ~/dotfiles/.editorconfig ~/.editorconfig
        ln -sf ~/dotfiles/.zshenv ~/.zshenv
        ln -sf ~/dotfiles/.zsh ~/
        ln -sf ~/dotfiles/.config/nvim ~/.config/
        ln -sf ~/dotfiles/.config/dein ~/.config/
